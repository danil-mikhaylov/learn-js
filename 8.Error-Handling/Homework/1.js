/** finally или просто код?
 * Сравнить два фрагмента кода.
 * Нам нужно, чтобы очистка произошла в любом случае, неважно, есть ошибки или нет.
 * Есть ли преимущество в использовании finally или оба фрагмента кода одинаковы?
 * Если преимущество есть, то дайте пример, когда такое преимущество проявляется.
 */

// Первый вариант:
try {
  // начать работу
  // работать
} catch (e) {
  // обработать ошибку
} finally {
  // очистить рабочее пространство
}

// Второй вариант:
try {
  // начать работу
  // работать
} catch (e) {
  // обработать ошибку
}

// очистить рабочее пространство

/** Разница заключается в том, что если управление как-то выпрегнет из блока try catch, то
 * Во втором варианте очистка рабочего пространства не случится
 А в первом варианте рабочее пространство очистится в любом случае, несмотря ни на что.
 Ниже есть несколько примеров:
 */
// Когда выход осуществляется из-за return'a
function f() {
  try {
    console.log("Начало");
    return "result";
  }
  catch (e) {
    /// ...
  } finally {
    console.log("Очистка!")
  }
  // "Сделать очистку" не сработает
}

f(); // Очистка!

// Или когда есть "throw"
function f1() {
  try {
    console.log("Начало");
    throw new Error("ошибка");
  } catch (e) {
    // ...
    if ("Не могу обработать ошибку") {
      throw e;
    }
  } finally { // Гарантирует очистку
    console.log("Очистка!")
  }
  // "Сделать очистку" не сработает
}

f1(); // Очистка!