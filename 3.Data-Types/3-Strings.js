function sum(a, b) {
  return a + b;
}

console.log(`1 + 2 = ${sum(1, 2)}.`); // 1 + 2 = 3.

let GuestList = `Guests:
  * John
  * Pete
  * Mary
  `;
console.log(GuestList);

let guestList = "Guests: // Error: Unexpected token ILLEGAL":
* John";

let guestList = "Guests:\n * John\n * Pete\n * Mary";

console.log(guestList);

// –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω —Å –ø–æ–º–æ—â—å—é —Å–∏–º–≤–æ–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
let str1 = "Hello\nWorld";

// –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫
let str2 = `Hello
World`;

console.log(str1 == str2); // true

// ¬©
console.log("\u00A9");

// –î–ª–∏–Ω–Ω—ã–µ —é–Ω–∏–∫–æ–¥–Ω—ã–µ –∫–æ–¥—ã
// ‰Ω´, —Ä–µ–¥–∫–∏–π –∫–∏—Ç–∞–π—Å–∫–∏–π –∏–µ—Ä–æ–≥–ª–∏—Ñ
console.log("\u{20331}");
// üòç, –ª–∏—Ü–æ —Å —É–ª—ã–±–∫–æ–π –∏ –≥–ª–∞–∑–∞–º–∏ –≤ —Ñ–æ—Ä–º–µ —Å–µ—Ä–¥–µ—Ü
console.log("\u{1F60D}");

console.log("I'm the Walrus!"); // I'm the Walrus!
console.log(`I'm the Walrus!`); // I'm the Walrus!
console.log("I'm the Walrus!"); // I'm the Walrus!
console.log(`The backslash: \\`); // The backslash: \ (–ï—Å–ª–∏ –Ω–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫ —Å—Ç—Ä–æ–∫–µ "/")

console.log("measdfasdfasdfasdow".length); // 19

let str = `Hello!`;

console.log(str[0]); // H
console.log(str[1]); // e
console.log(str.charAt(1)); // e

for (let char of str) {
  console.log(char);
}

let str = "Hi";

str[0] = "h"; // –æ—à–∏–±–∫–∞
console.log(str[0]); // –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

let str = "Hi";

str = "h" + str[1]; // –∑–∞–º–µ–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É

console.log(str); // hi
let Interface = "Interface";

console.log(Interface.toUpperCase()); // INTERFACE
console.log(Interface.toLowerCase()); // interface

console.log(Interface.charAt(0).toLowerCase()); // i
console.log(Interface); // Interface
Interface = Interface[0].toLowerCase() + "nterFace";
console.log(Interface); // interface

let str = "Widget with id";

console.log(str.indexOf("Widget")); // 0, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ 'Widget' –Ω–∞–π–¥–µ–Ω–∞ –≤ –Ω–∞—á–∞–ª–µ
console.log(str.indexOf("widget")); // -1, —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç, –ø–æ–∏—Å–∫ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É

console.log(str.indexOf("id")); // 1, –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ "id" –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 1 (..idget with id)

let str = "Widget with id";

console.log(str.indexOf("id", 2));

let str = "–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫";

let target = "–ò–∞";

let pos = 0;

while (true) {
  let foundPos = str.indexOf(target, pos);
  if (foundPos == -1) break;

  console.log(`Found here: ${foundPos}`);
  pos = foundPos + 1;
}

let str = "Widget with id";
if (str.indexOf("Widget")) {
  console.log("There is a match (first case)"); // –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
}
if (str.indexOf("Widget") != -1) {
  console.log("There is a match (second case)"); // —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç
}

console.log(~2); // -3, —Ç–æ –∂–µ, —á—Ç–æ -(2+1)
console.log(~1); // -2, —Ç–æ –∂–µ, —á—Ç–æ -(1+1)
console.log(~0); // -1, —Ç–æ –∂–µ, —á—Ç–æ -(0+1)
console.log(~-1); // 0, —Ç–æ –∂–µ, —á—Ç–æ -(-1+1)

let str = "Widget";
if (~str.indexOf("Widget")) {
  // –ï—Å–ª–∏ –≤ if "0", —Ç–æ –æ–Ω –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è. –£ –Ω–∞—Å –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ ~ –¥–µ–ª–∞–µ—Ç—Å—è
  // "0", –µ—Å–ª–∏ –µ–≥–æ –∞—Ä–≥–º—É–µ–Ω—Ç -- (-1) –¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç, —Ç–æ if –Ω–µ –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è.
  console.log("–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å"); // —Ä–∞–±–æ—Ç–∞–µ—Ç
}

console.log("Widget with id".includes("Widget")); // true

console.log("Hello".includes("Bye")); // false

console.log("Midget".includes("id")); // true
console.log("Midget".includes("id", 3)); // false, –ø–æ–∏—Å–∫ –Ω–∞—á–∞—Ç —Å –ø–æ–∑–∏—Ü–∏–∏ 3print

console.log("Widget".startsWith("Wid")); // true, "Wid" ‚Äî –Ω–∞—á–∞–ª–æ "Widget"
console.log("Widget".endsWith("get")); // true, "get" ‚Äî –æ–∫–æ–Ω—á–∞–Ω–∏–µ "Widget"

let str = "stringify";
// 'string', —Å–∏–º–≤–æ–ª—ã –æ—Ç 0 –¥–æ 5 (–Ω–µ –≤–∫–ª—é—á–∞—è 5)
console.log(str.slice(0, 5));
// 's', –æ—Ç 0 –¥–æ 1, –Ω–µ –≤–∫–ª—é—á–∞—è 1, —Ç. –µ. —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 0
console.log(str.slice(0, 1));

let str = "stringify";
console.log(str.slice(2)); // stringify, —Å –ø–æ–∑–∏—Ü–∏–∏ 2 –∏ –¥–æ –∫–æ–Ω—Ü–∞

let str = "stringify";

// –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–æ–∑–∏—Ü–∏–∏ 4 —Å–ø—Ä–∞–≤–∞, –∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ 1 —Å–ø—Ä–∞–≤–∞
console.log(str.slice(-4, -1)); // gif

let str = "stringify";

// –¥–ª—è substring —ç—Ç–∏ –¥–≤–∞ –ø—Ä–∏–º–µ—Ä–∞ ‚Äî –æ–¥–∏–Ω–∞–∫–æ–≤—ã
console.log(str.substring(2, 6)); // "ring"
console.log(str.substring(6, 2)); // "ring"

// ‚Ä¶–Ω–æ –Ω–µ –¥–ª—è slice:
console.log(str.slice(2, 6)); // "ring" (—Ç–æ –∂–µ —Å–∞–º–æ–µ)
console.log(str.slice(6, 2)); // "" (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)

let str = "stringify";
// ring, –ø–æ–ª—É—á–∞–µ–º 4 —Å–∏–º–≤–æ–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ 2
console.log(str.substr(2, 4));

let str = "stringify";
// gi, –ø–æ–ª—É—á–∞–µ–º 2 —Å–∏–º–≤–æ–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ 4 —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
console.log(str.substr(-4, 2));

let str = "";

for (let i = 65; i <= 220; i++) {
  str += String.fromCodePoint(i);
}
console.log(str);
// ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~¬Ä¬Å¬Ç¬É¬Ñ
// ¬°¬¢¬£¬§¬•¬¶¬ß¬®¬©¬™¬´¬¨¬≠¬Æ¬Ø¬∞¬±¬≤¬≥¬¥¬µ¬∂¬∑¬∏¬π¬∫¬ª¬º¬Ω¬æ¬ø√Ä√Å√Ç√É√Ñ√Ö√Ü√á√à√â√ä√ã√å√ç√é√è√ê√ë√í√ì√î√ï√ñ√ó√ò√ô√ö√õ√ú

console.log("√ñsterreich".localeCompare("Zealand")); // -1

let str = "123";
console.log(str.repeat(5));

function ucFirst(str) {
  if (!str) return str;
  let newStr = str.charAt(0).toUpperCase() + str.slice(1);
  return newStr;
}

console.log(ucFirst("john"));

function checkSpam(str) {
  if (
    str.toLowerCase().includes("viagra") ||
    str.toLowerCase().includes("xxx")
  ) {
    return true;
  } else {
    return false;
  }
}

console.log(checkSpam("buy ViAgRA now"));
console.log(checkSpam("free xxxxx"));
console.log(checkSpam("innocent rabbit"));

function truncate(str, maxlength) {
  let newStr;
  if (str.length <= maxlength) {
    newStr = str;
  } else {
    newStr = str.slice(0, maxlength - 1) + "...";
  }
  return newStr;
}

console.log(truncate("–í–æ—Ç, —á—Ç–æ –º–Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Å–∫–∞–∑–∞—Ç—å –Ω–∞ —ç—Ç—É —Ç–µ–º—É:", 20));
console.log(truncate("–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!", 20));

function extractCurrencyValue(str) {
  return parseInt(str.slice(1)); // –û—Ç—Ä–µ–∑–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª, –∑–∞—Ç–µ–º –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
}

console.log(extractCurrencyValue("$120"));
console.log(typeof extractCurrencyValue("$120"));