// let cache = new Set();
// function process(obj) {
//   if (!cache.has(obj)) {
//     let result = /* do some stuff with the object */ obj + 1;
//     cache.set(obj, result);
//   }
//   return cache.get(obj);
// }
//
// // üìÅ main.js
// let obj = {
//   /* –¥–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ –æ–±—ä–µ–∫—Ç */
// };
//
// let result1 = process(obj); // –≤—ã—á–∏—Å–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç
//
// // ...–ø–æ–∑–∂–µ, –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –∫–æ–¥–µ...
// let result2 = process(obj); // —Ä–∞–Ω–µ–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∑—è—Ç –∏–∑ –∫–µ—à–∞
//
// // ...–ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω:
// obj = null;
//
// console.log(cache.size); // 1 (–£–ø—Å! –û–±—ä–µ–∫—Ç –≤—Å—ë –µ—â—ë –≤ –∫–µ—à–µ, –∑–∞–Ω–∏–º–∞–µ—Ç –ø–∞–º—è—Ç—å!)

// üìÅ cache.js
// let cache = new WeakMap();

// function process(obj) {
//   if (!cache.has(obj)) {
//     let result = /* –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ */ 1 + obj;
//     cache.set(obj, result);
//   }
//   return cache.get(obj);
// }
//
// // üìÅ main.js
// let obj = {
//   /* –∫–∞–∫–æ–π-—Ç–æ –æ–±—ä–µ–∫—Ç */
// };
//
// let result1 = process(obj);
// let result2 = process(obj);
//
// // ...–ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω:
// obj = null;
//
// // –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∏—Ç—å cache.size, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ WeakMap,
// // –Ω–æ –æ–Ω —Ä–∞–≤–µ–Ω 0 –∏–ª–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω 0
// // –ö–æ–≥–¥–∞ —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ —É–¥–∞–ª—è–µ—Ç obj, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞ —Ç–æ–∂–µ —É–¥–∞–ª—è—é—Ç—Å—è

// let visitedSet = new WeakSet();
//
// let john = { name: "John" };
// let pete = { name: "Pete" };
// let mary = { name: "Mary" };
//
// visitedSet.add(john); // John –∑–∞—Ö–æ–¥–∏–ª –∫ –Ω–∞–º
// visitedSet.add(pete); // –ø–æ—Ç–æ–º Pete
// visitedSet.add(john); // John —Å–Ω–æ–≤–∞
//
// // visitedSet —Å–µ–π—á–∞—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
//
// // –ø—Ä–æ–≤–µ—Ä–∏–º, –∑–∞—Ö–æ–¥–∏–ª –ª–∏ John?
// console.log(visitedSet.has(john)); // true
//
// // –ø—Ä–æ–≤–µ—Ä–∏–º, –∑–∞—Ö–æ–¥–∏–ª–∞ –ª–∏ Mary?
// console.log(visitedSet.has(mary)); // false
//
// john = null;
//
// // —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö visitedSet –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

// let messages = [
//   { text: "Hello", from: "John" },
//   { text: "How goes?", from: "John" },
//   { text: "See you soon", from: "Alice" }
// ];
//
// let readMessages = new WeakSet();
//
// readMessages.add(messages[0]);
// readMessages.add(messages[1]);
// readMessages.add(messages[0]);
// console.log("Read message 0: " + readMessages.has(messages[0]));
// console.log("Read message 1: " + readMessages.has(messages[1]));
// console.log("Read message 2: " + readMessages.has(messages[2]));


// let messages = [
//   { text: "Hello", from: "John" }, // 0
//   { text: "How goes?", from: "John" }, // 1
//   { text: "See you soon", from: "Alice" } // 2
// ];
//
// let readMap = new Map();
// readMap.set(messages[0], new Date(2019, 8, 1, 19));
// readMap.set(messages[1], new Date(2019, 8, 1, 19));
//
// console.log(readMap.has(messages[0])); // true
// console.log(readMap.has(messages[1])); // true
// console.log(readMap.has(messages[2])); // false